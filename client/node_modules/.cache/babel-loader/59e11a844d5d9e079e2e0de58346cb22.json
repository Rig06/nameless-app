{"ast":null,"code":"// 3rd party library imports\n// Waveform\n// project imports\nimport { Visualizer } from '../Visualizers'; // Global vars\n\nvar amplitude; // Initial Position of glowing right circle O O\n\nconst INI_CIRCLE_POS_Y = 130;\nconst INI_CIRCLE_POS_X = 740;\nvar InitRadius = 150;\nconst CIRC_WEIGHT = 4.8;\n\nfunction setUp(p5) {\n  p5.angleMode('degrees');\n  p5.background(0);\n  p5.translate(INI_CIRCLE_POS_X, INI_CIRCLE_POS_Y);\n}\n\nexport const MiniTron = new Visualizer('Rig06', (p5, analyzer) => {\n  setUp(p5);\n  const cir_01 = new CircleWave(p5, analyzer, InitRadius, [0, 0, 0], CIRC_WEIGHT);\n  cir_01.darwEffect(0, 0);\n\n  if (amplitude !== 0) {\n    const cir_02 = new CircleWave(p5, analyzer, InitRadius - 120, [255, 8, 0], 0.5);\n    cir_02.darwEffect(0, 0);\n  }\n\n  const cir_02 = new CircleWave(p5, analyzer, InitRadius, [0, 0, 0], CIRC_WEIGHT);\n  cir_02.darwEffect(-300, 0);\n\n  if (amplitude !== 0) {\n    const cir_02 = new CircleWave(p5, analyzer, InitRadius - 120, [255, 8, 0], 0.5);\n    cir_02.darwEffect(0, 0);\n  }\n\n  const waveBars = new WaveBars(p5, analyzer);\n  waveBars.drawBars(0, 0);\n  const rect_top = new DrawRec(p5, 0, -600, -540); // red rec center\n\n  rect_top.drawRect(1500, 200, 0);\n  const rect_left = new DrawRec(p5, -17, 1100, 300); // right\n\n  rect_left.drawRect(700, 600, 0); //\n\n  const rect_right = new DrawRec(p5, 29, -1420, 0); // left\n\n  rect_right.drawRect(700, 600, 0);\n} // callback () =>{}\n); // Export\n\nclass WaveBars {\n  constructor(p5, analyzer) {\n    this.p5 = void 0;\n    this.analyzer = void 0;\n    this.p5 = p5;\n    this.analyzer = analyzer;\n  } // Render loop that draws shapes with p5\n\n\n  drawBars(box_x_pos, box_y_pos) {\n    this.p5.translate(box_x_pos, 250);\n    this.drawRecMidRect(this.p5); // rec-waves box\n\n    const values = this.analyzer.getValue();\n    this.p5.noStroke();\n    var bars = 55;\n    this.p5.translate(14, -30);\n\n    for (var i = 0; i < bars; i++) {\n      var amp = values[i];\n      const bar_x = i * 5;\n      const bar_width = 4.5;\n      if (amp > 0) amp = amp * -1;\n      const bar_height = amp / 4;\n      this.p5.fill(0);\n      this.p5.rect(bar_x, 5, bar_width, 500 * bar_height - 2);\n    }\n  }\n\n  drawRecMidRect(p5) {\n    //  p5.translate(WIDTH - 1440, HEIGHT - 500)\n    p5.noStroke();\n    const color = randomColor();\n    p5.fill(color[0], color[1], color[2]);\n    p5.rect(0, -20, 300, -50, p5.PI + 20.0, p5.PI + 20.0, p5.PI, p5.PI);\n  }\n\n}\n\nclass DrawRec {\n  constructor(p5, shear, x_pos, y_pos) {\n    this.p5 = void 0;\n    this.shear = void 0;\n    this.x_pos = void 0;\n    this.y_pos = void 0;\n    this.p5 = p5;\n    this.shear = shear;\n    this.x_pos = x_pos;\n    this.y_pos = y_pos;\n  }\n\n  drawRect(width, height, border) {\n    this.p5.translate(this.x_pos, this.y_pos);\n    this.p5.noStroke();\n    this.p5.shearX(this.shear);\n\n    if (amplitude === 0) {\n      this.p5.fill(248, 53, 53);\n    } else {\n      var color = randomColor();\n      this.p5.fill(color[0], color[1], color[2]);\n    }\n\n    this.p5.rect(0, 0, width, height, 25);\n  }\n\n}\n\nclass CircleWave {\n  constructor(p5, waveValues, radius, fill_color, circum_w) {\n    this.p5 = void 0;\n    this.values = void 0;\n    this.radius = void 0;\n    this.color = void 0;\n    this.shape_weight = void 0;\n    this.p5 = p5;\n    this.values = waveValues.getValue();\n    this.radius = radius;\n    this.color = fill_color;\n    this.shape_weight = circum_w;\n  }\n\n  darwEffect(canvas_pos_x, canvas_pos_y) {\n    this.p5.translate(canvas_pos_x, canvas_pos_y);\n    this.p5.strokeWeight(this.shape_weight); // Density of the circumference \n\n    const stroke = randomColor();\n    this.p5.stroke(stroke[0], stroke[1], stroke[2]);\n    this.p5.fill(this.color[0], this.color[1], this.color[2]);\n    this.p5.beginShape();\n\n    for (let i = 0; i <= 180; i += 0.5) {\n      var index = Math.floor(this.p5.map(i, 0, 180, 0, this.values.length - 1));\n      amplitude = this.values[index];\n      var r = this.p5.map(amplitude, -1, 1, 50, this.radius);\n      var x = r * Math.sin(i);\n      var y = r * Math.cos(i); // Place vertex\n\n      this.p5.vertex(x, y);\n    }\n\n    this.p5.endShape();\n  }\n\n} //==================================================================\n\n\nfunction randomColor() {\n  return [Math.floor(Math.random() * 250) + 150, Math.floor(Math.random() * 250) + 150, Math.floor(Math.random() * 250) + 150];\n}","map":{"version":3,"sources":["/Users/rigoangeles/Desktop/deployNameLessApp/nameless-app/client/src/visualizers/Rig06.tsx"],"names":["Visualizer","amplitude","INI_CIRCLE_POS_Y","INI_CIRCLE_POS_X","InitRadius","CIRC_WEIGHT","setUp","p5","angleMode","background","translate","MiniTron","analyzer","cir_01","CircleWave","darwEffect","cir_02","waveBars","WaveBars","drawBars","rect_top","DrawRec","drawRect","rect_left","rect_right","constructor","box_x_pos","box_y_pos","drawRecMidRect","values","getValue","noStroke","bars","i","amp","bar_x","bar_width","bar_height","fill","rect","color","randomColor","PI","shear","x_pos","y_pos","width","height","border","shearX","waveValues","radius","fill_color","circum_w","shape_weight","canvas_pos_x","canvas_pos_y","strokeWeight","stroke","beginShape","index","Math","floor","map","length","r","x","sin","y","cos","vertex","endShape","random"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport p5 from \"p5\";\nimport P5 from 'p5';\nimport * as Tone from 'tone'; // Waveform\n// project imports\nimport { Visualizer } from '../Visualizers';\n// Global vars\nvar amplitude: number;\n\n// Initial Position of glowing right circle O O\nconst INI_CIRCLE_POS_Y = 130;\nconst INI_CIRCLE_POS_X = 740;\nvar InitRadius = 150;\nconst CIRC_WEIGHT = 4.8;\n\nfunction setUp(p5: p5){\n  p5.angleMode('degrees')\n  p5.background(0)\n  p5.translate(INI_CIRCLE_POS_X, INI_CIRCLE_POS_Y);\n}\n\nexport const MiniTron = new Visualizer(\n'Rig06',  (p5: p5, analyzer: Tone.Analyser) => {\n  setUp(p5)\n\n  const cir_01 = new CircleWave(p5,  analyzer, InitRadius, [0, 0, 0] , CIRC_WEIGHT);\n  cir_01.darwEffect(0, 0);\n  if(amplitude !== 0){\n    const cir_02 = new CircleWave(p5,  analyzer, InitRadius - 120, [255, 8, 0]   , 0.5); \n    cir_02.darwEffect(0, 0);\n  }\n  const cir_02 = new CircleWave(p5,  analyzer, InitRadius, [0, 0, 0] , CIRC_WEIGHT);\n  cir_02.darwEffect(-300, 0);\n  if(amplitude !== 0){\n    const cir_02 = new CircleWave(p5,  analyzer, InitRadius - 120, [255, 8, 0]  , 0.5); \n    cir_02.darwEffect(0, 0);\n  }\n \n  const waveBars = new WaveBars(p5, analyzer);\n  waveBars.drawBars(0, 0);\n\n  const rect_top = new DrawRec(p5, 0, -600, -540); // red rec center\n  rect_top.drawRect(1500, 200, 0);\n\n const rect_left = new DrawRec(p5, -17, 1100, 300);// right\n rect_left.drawRect(700, 600, 0)\n//\n const rect_right = new DrawRec(p5, 29, -1420, 0); // left\n rect_right.drawRect(700, 600, 0);\n\n  } // callback () =>{}\n); // Export\n\n\nclass WaveBars{\n  p5: p5\n  analyzer: Tone.Analyser\n  constructor(p5: p5, analyzer: Tone.Analyser){\n    this.p5 = p5;\n    this.analyzer = analyzer;\n  }\n    // Render loop that draws shapes with p5\n      drawBars(box_x_pos: number, box_y_pos: number) {\n\n      this.p5.translate(box_x_pos, 250)\n      this.drawRecMidRect(this.p5); // rec-waves box\n\n      const values = this.analyzer.getValue();\n      this.p5.noStroke();\n      var bars = 55;\n      this.p5.translate(14, -30)\n    \n      for (var i = 0; i < bars; i++) {\n        var amp = values[i] as number;\n       const bar_x = i * 5;\n        const bar_width = 4.5;\n        if(amp > 0) amp = amp*-1;\n        const bar_height = amp / 4;\n        this.p5.fill(0);\n        this.p5.rect(\n          bar_x,\n          5,\n          bar_width,\n          (500 * bar_height) -2\n        );\n      }\n    }\n\n    drawRecMidRect(p5: p5){\n    //  p5.translate(WIDTH - 1440, HEIGHT - 500)\n      p5.noStroke();\n      const color = randomColor()\n      p5.fill(color[0], color[1], color[2]);\n        p5.rect(\n        0,\n        -20,\n        300,\n         -50,\n         p5.PI + 20.0,\n         p5.PI + 20.0,\n         p5.PI,\n         p5.PI\n      );\n      \n        }\n\n}\n\n    class DrawRec{\n      p5: p5;\n      shear: number;\n      x_pos: number;\n      y_pos: number;\n\n      constructor(p5: p5, shear: number, x_pos: number, y_pos: number){\n        this.p5 = p5;\n        this.shear = shear;\n        this.x_pos = x_pos;\n        this.y_pos = y_pos;\n      }\n\n       drawRect(width: number, height: number, border: number) {\n      this.p5.translate(this.x_pos, this.y_pos)\n      this.p5.noStroke();\n      this.p5.shearX(this.shear)\n\n      if(amplitude === 0){\n      this.p5.fill(248, 53, 53);\n      } else {\n        var color = randomColor();\n        this.p5.fill(color[0], color[1], color[2]);\n      }\n      this.p5.rect(\n        0,\n        0,\n        width,\n         height,\n         25\n      );\n    }\n  }\n\nclass CircleWave{\n  p5: P5;\n  values: any;\n  radius: number;\n  color: number [];\n  shape_weight: number;\n  constructor(p5: p5, waveValues: Tone.Analyser, radius: number,\n    fill_color: number [], circum_w: number){\n    this.p5 = p5;\n    this.values = waveValues.getValue();\n    this.radius = radius;\n    this.color = fill_color;\n    this.shape_weight = circum_w;\n  }\n\n darwEffect(canvas_pos_x: number, canvas_pos_y: number): void{\n  this.p5.translate(canvas_pos_x, canvas_pos_y)\n  this.p5.strokeWeight(this.shape_weight); // Density of the circumference \n  const stroke = randomColor();\n  this.p5.stroke(stroke[0],\n    stroke[1],\n    stroke[2]);\n  this.p5.fill(\n    this.color[0],\n    this.color[1],\n    this.color[2]);\n  this.p5.beginShape();\n  for (let i = 0; i <= 180; i+= 0.5) {\n      var index = Math.floor(this.p5.map(i, 0, 180, 0, this.values.length-1));\n      amplitude = this.values[index] as number;\n      var r = this.p5.map(amplitude, -1, 1, 50, this.radius)\n      var x = r * Math.sin(i) ;\n      var y = r * Math.cos(i)\n      // Place vertex\n      this.p5.vertex(x , y);\n  }\n  this.p5.endShape();\n}\n}\n//==================================================================\nfunction randomColor(): number [] {\n  return [Math.floor(Math.random()*250) + 150,\n     Math.floor(Math.random()*250) + 150,\n      Math.floor(Math.random()*250) + 150];\n}\n\n\n"]},"metadata":{},"sourceType":"module"}