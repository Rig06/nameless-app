{"ast":null,"code":"var _jsxFileName = \"/Users/rigoangeles/Desktop/deployNameLessApp/nameless-app/client/src/instruments/yujarvis08.tsx\";\nimport * as Tone from 'tone';\nimport { List, Range } from 'immutable';\nimport React from 'react';\nimport { Instrument } from '../Instruments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet asynth = new Tone.AMSynth().toDestination();\nconst filter = new Tone.Filter(\"C6\").toDestination();\nconst freeverb = new Tone.Freeverb().toDestination();\nfreeverb.dampening = 160;\nasynth.set({\n  envelope: {\n    attack: 0.01,\n    sustain: 1\n  },\n  volume: 5\n});\nasynth.connect(freeverb);\nasynth.connect(filter);\nasynth.harmonicity.value = 32;\nlet randomColor = \"#\" + ((1 << 24) * Math.random() | 0).toString(16);\nexport function XylophoneKey(_ref) {\n  let {\n    note,\n    synth\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttackRelease(`${note}`, '64n'),\n    style: {\n      height: \"23rem\",\n      width: \"6.5rem\",\n      backgroundColor: randomColor + 10,\n      margin: \"0.2rem\",\n      display: \"inline-block\",\n      border: \"solid\",\n      borderRadius: \"20px\",\n      zIndex: -1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      style: {\n        height: \"20px\",\n        width: \"20px\",\n        borderRadius: \"50%\",\n        backgroundColor: \"black\",\n        marginLeft: \"2.3rem\",\n        marginTop: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle2\",\n      style: {\n        height: \"20px\",\n        width: \"20px\",\n        borderRadius: \"50%\",\n        backgroundColor: \"black\",\n        marginLeft: \"2.3rem\",\n        marginTop: \"18.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = XylophoneKey;\n\nfunction Xylophone(_ref2) {\n  let {\n    synth,\n    setSynth\n  } = _ref2;\n  const keys = List([{\n    note: 'C',\n    idx: 4\n  }, {\n    note: 'D',\n    idx: 5\n  }, {\n    note: 'E',\n    idx: 6\n  }, {\n    note: 'F',\n    idx: 7\n  }, {\n    note: 'G',\n    idx: 8\n  }, {\n    note: 'A',\n    idx: 9\n  }, {\n    note: 'B',\n    idx: 10\n  }]);\n\n  const setOscillator = () => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth(synth.get()).toDestination();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-100 ml4\",\n      children: Range(3, 5).map(octave => keys.map(key => {\n        const note = `${key.note}${octave + 2}`;\n        return /*#__PURE__*/_jsxDEV(XylophoneKey, {\n          note: note,\n          synth: asynth,\n          octave: octave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dib w-30 pa2\",\n      onMouseDown: () => setOscillator(),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-100 bg-light-silver\",\n        children: \"Set as active instrument\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Xylophone;\nexport const XylophoneInstrument = new Instrument('yujarvis08', Xylophone);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"XylophoneKey\");\n$RefreshReg$(_c2, \"Xylophone\");","map":{"version":3,"sources":["/Users/rigoangeles/Desktop/deployNameLessApp/nameless-app/client/src/instruments/yujarvis08.tsx"],"names":["Tone","List","Range","React","Instrument","asynth","AMSynth","toDestination","filter","Filter","freeverb","Freeverb","dampening","set","envelope","attack","sustain","volume","connect","harmonicity","value","randomColor","Math","random","toString","XylophoneKey","note","synth","triggerAttackRelease","height","width","backgroundColor","margin","display","border","borderRadius","zIndex","marginLeft","marginTop","Xylophone","setSynth","keys","idx","setOscillator","oldSynth","disconnect","Synth","get","map","octave","key","XylophoneInstrument"],"mappings":"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","sourcesContent":["import * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\nimport { Instrument, InstrumentProps } from '../Instruments';\n\ninterface XylophoneKeyProps {\n  note: string;\n  synth?: Tone.AMSynth;\n  octave: number;\n}\n\nlet asynth = new Tone.AMSynth().toDestination();\nconst filter = new Tone.Filter(\"C6\").toDestination();\nconst freeverb = new Tone.Freeverb().toDestination();\nfreeverb.dampening = 160;\n\nasynth.set({\n\n\tenvelope: {\n\t\tattack: 0.01,\n        sustain: 1,\n\t},\n    volume: 5,\n});\n\nasynth.connect(freeverb);\nasynth.connect(filter);\n\nasynth.harmonicity.value = 32;\n\nlet randomColor = \"#\" + (((1 << 24) * Math.random()) | 0).toString(16);\n\nexport function XylophoneKey({\n  note,\n  synth,\n}: XylophoneKeyProps): JSX.Element {\n\n  return (\n    <div\n      onMouseDown={() => synth?.triggerAttackRelease(`${note}`, '64n')}\n      style={{\n        height: \"23rem\",\n        width: \"6.5rem\",\n        backgroundColor: randomColor+10,\n        margin: \"0.2rem\",\n        display: \"inline-block\",\n        border: \"solid\",\n        borderRadius: \"20px\",\n        zIndex: -1\n      }}\n    >\n      <div className=\"circle\"\n        style={{height: \"20px\",\n        width: \"20px\",\n        borderRadius:\"50%\",\n        backgroundColor: \"black\",\n        marginLeft: \"2.3rem\",\n        marginTop:\"10px\"}}>\n      </div>\n      <div className=\"circle2\"\n        style={{height: \"20px\",\n        width: \"20px\",\n        borderRadius:\"50%\",\n        backgroundColor: \"black\",\n        marginLeft: \"2.3rem\",\n        marginTop:\"18.5rem\"}}>\n      </div>\n    </div>\n    \n  );\n}\n\nfunction Xylophone({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C', idx: 4 },\n    { note: 'D', idx: 5 },\n    { note: 'E', idx: 6 },\n    { note: 'F', idx: 7 },\n    { note: 'G', idx: 8 },\n    { note: 'A', idx: 9 },\n    { note: 'B', idx: 10 },\n  ]);\n\n  const setOscillator = () => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      \n      return new Tone.Synth(\n        synth.get()\n      ).toDestination();\n    });\n  };\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"relative dib h4 w-100 ml4\">\n        {Range(3, 5).map(octave =>\n          keys.map(key => {\n            const note = `${key.note}${octave+2}`;\n            return (\n              <XylophoneKey\n                note={note}\n                synth={asynth}\n                octave={octave}\n              />\n            );\n          }),\n        )}\n      </div>\n      <div className='dib w-30 pa2' onMouseDown={()=> setOscillator()}>\n            <button className='w-100 bg-light-silver'>Set as active instrument</button>\n        </div>\n    </div>\n  );\n}\n\nexport const XylophoneInstrument = new Instrument('yujarvis08', Xylophone);"]},"metadata":{},"sourceType":"module"}